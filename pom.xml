<!-- 
 *
 * Copyright 2014 the original author or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ru.anr</groupId>
        <artifactId>config.java</artifactId>
        <version>0.9-SNAPSHOT</version>
    </parent>

    <artifactId>base.app.sample</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>war</packaging>
    <name>Base Platform Sample Application</name>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:ssh://@github.com/anr-ru/base.app.sample.git</connection>
        <url>https://github.com/anr-ru/base.app.sample/</url>
        <tag>HEAD</tag>
    </scm>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- A workaround to make Glassfish compile JSP when running from Maven
                         see: https://java.net/jira/browse/GLASSFISH-20721  -->
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>                            
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
            </plugin>                    
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>javax.ejb-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>ru.anr</groupId>
            <artifactId>base.services</artifactId>
            <version>${base.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>ru.anr</groupId>
            <artifactId>base.utils</artifactId>
            <version>${base.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>ru.anr</groupId>
            <artifactId>base.facade</artifactId>
            <version>${base.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>ru.anr</groupId>
            <artifactId>base.web</artifactId>
            <version>${base.platform.version}</version>
        </dependency>
        
        <!-- TESTS -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.extras</groupId>
            <artifactId>glassfish-embedded-all</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${derby.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>ru.anr</groupId>
            <artifactId>base.services</artifactId>
            <version>${base.platform.version}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>ru.anr</groupId>
            <artifactId>base.facade</artifactId>
            <version>${base.platform.version}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>ru.anr</groupId>
            <artifactId>base.tests</artifactId>
            <version>${base.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- For local dao tests -->
        <dependency>  
            <groupId>org.hsqldb</groupId>  
            <artifactId>hsqldb</artifactId>  
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>        

    </dependencies>

    <properties>

        <derby.version>10.8.2.2</derby.version>

        <base.platform.version>0.5-SNAPSHOT</base.platform.version>

        <!-- In JTA environment we use Apache Depby, supplied with Glassfish -->
        <db.hibernateDialect>org.hibernate.dialect.DerbyTenSevenDialect</db.hibernateDialect>
        <db.driverClass>org.apache.derby.jdbc.EmbeddedXADataSource</db.driverClass>
        <db.url>jdbc:derby:target/database</db.url>
        <db.user>localtest</db.user>
        <db.password>localtest</db.password>
        <db.datasoureType>javax.sql.XADataSource</db.datasoureType>

        <!-- In local JPA tests using in-memory HSQLDB -->
        <db.local.url>jdbc:hsqldb:mem:testdb</db.local.url>
        <db.local.user>sa</db.local.user>
        <db.local.password></db.local.password>
        <db.local.driverClass>org.hsqldb.jdbcDriver</db.local.driverClass>
        <db.local.hibernateDialect>org.hibernate.dialect.HSQLDialect</db.local.hibernateDialect>


    </properties>

</project>